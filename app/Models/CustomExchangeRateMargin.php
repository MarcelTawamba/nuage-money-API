<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;

/**
 * App\Models\CustomExchangeRateMargin
 *
 * @OA\Schema (
 *      schema="CustomExchangeRateMargin",
 *      required={"exchange_margin_id","margin"},
 *      @OA\Property(
 *          property="exchange_margin_id",
 *          description="",
 *          readOnly=false,
 *          nullable=false,
 *          type="integer",
 *          format="int32"
 *      ),
 *      @OA\Property(
 *          property="margin",
 *          description="",
 *          readOnly=false,
 *          nullable=false,
 *          type="number",
 *          format="number"
 *      ),
 *      @OA\Property(
 *          property="created_at",
 *          description="",
 *          readOnly=true,
 *          nullable=true,
 *          type="string",
 *          format="date-time"
 *      ),
 *      @OA\Property(
 *          property="updated_at",
 *          description="",
 *          readOnly=true,
 *          nullable=true,
 *          type="string",
 *          format="date-time"
 *      )
 * )
 * @property int $id
 * @property int $company_id
 * @property int $exchange_margin_id
 * @property float $margin
 * @property \Illuminate\Support\Carbon|null $created_at
 * @property \Illuminate\Support\Carbon|null $updated_at
 * @method static \Illuminate\Database\Eloquent\Builder|CustomExchangeRateMargin newModelQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|CustomExchangeRateMargin newQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|CustomExchangeRateMargin query()
 * @method static \Illuminate\Database\Eloquent\Builder|CustomExchangeRateMargin whereClientId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|CustomExchangeRateMargin whereCreatedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|CustomExchangeRateMargin whereExchangeMarginId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|CustomExchangeRateMargin whereId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|CustomExchangeRateMargin whereMargin($value)
 * @method static \Illuminate\Database\Eloquent\Builder|CustomExchangeRateMargin whereUpdatedAt($value)
 * @mixin \Eloquent
 */class CustomExchangeRateMargin extends Model
{
    public $table = 'custom_exchange_rate_margins';

    public $fillable = [
        'exchange_margin_id',
        "company_id",
        'margin'
    ];

    protected $casts = [
        'exchange_margin_id' => 'integer',
        'margin' => 'double'
    ];

    public static array $rules = [
        'exchange_margin_id' => 'required',
        "company_id"=>"required|exists:App\Models\Company,id",
        'margin' => 'required'
    ];

    public  function company(){
        return $this->belongsTo(Company::class,'company_id');
    }
    public  function exhangeMargin(){
        return $this->belongsTo(ExchangeRateMargin::class,'exchange_margin_id');
    }

    public function toArray()
    {
        $arr = parent::toArray();
        $arr["company"]= $this->company->name;
        $arr["currency"]= $this->exhangeMargin->from_currency . " => " . $this->exhangeMargin->to_currency;
        $arr["normal_margin"]= $this->exhangeMargin->margin;
        return $arr; // TODO: Change the autogenerated stub
    }

    public function __construct(array $attributes = [])
    {
        parent::__construct($attributes);

        $nuage_env = env("NUAGE_ENV");

        if(strtoupper($nuage_env) === strtoupper("SANDBOX")) {
            $this->connection = env("AUTH_DB_CONNECTION", "mysql");
        }

    }

}
